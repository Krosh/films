{"version":3,"sources":["../../../app/routes/note_routes.js"],"names":[],"mappings":"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","file":"note_routes.js","sourcesContent":["var ObjectID = require('mongodb').ObjectID;\r\nmodule.exports = function (app, db) {\r\n    const parserModule = require('../parser/parser');\r\n    const parser = new parserModule();\r\n\r\n\r\n    app.post('/add-film/', (req, res) => {\r\n        const movie = {\r\n            title: req.headers.title,\r\n            description: req.headers.description,\r\n            image: req.headers.image,\r\n            rating: req.headers.rating,\r\n            tags: req.headers.tags\r\n        };\r\n        db.collection('films').insert(movie, (err, result) => {\r\n            if (err) {\r\n                res.send({'error': 'An error has occurred'});\r\n            } else {\r\n                res.send(result.ops[0]);\r\n            }\r\n        });\r\n    });\r\n\r\n    app.get('/films/:id', (req, res) => {\r\n        const id = req.params.id;\r\n        const details = {'_id': new ObjectID(id)};\r\n        db.collection('films').findOne(details, (err, item) => {\r\n            if (err) {\r\n                res.send({'error': 'An error has occurred'});\r\n            } else {\r\n                res.send(item);\r\n            }\r\n        });\r\n    });\r\n\r\n    app.get('/films/', (req, res) => {\r\n        db.collection(\"films\").find({isParsed: true}).toArray(function (err, result) {\r\n            if (err) throw err;\r\n            res.send(result);\r\n            console.log(result);\r\n            db.close();\r\n        });\r\n\r\n    });\r\n\r\n    app.get('/parse-user/:id', (req, res) => {\r\n        const id = req.params.id;\r\n        const url = `/user/${id}/votes/list/ord/date/page/1/#list`;\r\n        parser.parse(url, ($, res) => {\r\n            if (!$('.pagesFromTo').length) {\r\n                console.log(res);\r\n                return;\r\n            }\r\n\r\n            const totalNum = parseInt($('.pagesFromTo').text().split(' ').slice(-1)[0]);\r\n            const numPage = 200;\r\n            console.log(totalNum);\r\n            for (let i = 0; i <= totalNum / numPage; i++) {\r\n                const url = `/user/${id}/votes/list/ord/date/perpage/200/page/${i}/#list`;\r\n                setTimeout(() => {\r\n                    parser.parse(url, ($) => {\r\n                        let hrefs = [];\r\n                        $('.profileFilmsList .item').map(function () {\r\n                            const $a = $(this).find('a');\r\n                            hrefs.push($a.attr('href'));\r\n\r\n                            const mark = {\r\n                                idUser: id,\r\n                                rating: $(this).find('.vote').text(),\r\n                                film: $a.attr('href'),\r\n                            };\r\n\r\n                            db.collection('films').find(mark)\r\n                                .toArray((err, data) => {\r\n                                    if (err) {\r\n                                        db.collection('films').insert(mark);\r\n                                    }\r\n                                });\r\n                        });\r\n\r\n                        db.collection('films').find({\r\n                            url: {$in: hrefs}\r\n                        }).toArray((err, alreadySavedFilms) => {\r\n                            if (!err) {\r\n                                alreadySavedFilms.forEach((film) => {\r\n                                    const pos = hrefs.indexOf(film.url);\r\n                                    if (pos > -1) {\r\n                                        hrefs.splice(pos, 1);\r\n                                    }\r\n                                });\r\n                            }\r\n                            hrefs.forEach((url) => {\r\n                                let info = {url: url, isParsed: false};\r\n                                db.collection('films').insert(info);\r\n                            });\r\n                        });\r\n                    });\r\n                }, i * 60000);\r\n            }\r\n        })\r\n    });\r\n\r\n\r\n    app.get('/parse-film/', (req, res) => {\r\n\r\n        let url;\r\n\r\n        console.log('test');\r\n        setInterval(function () {\r\n\r\n            url = '';\r\n\r\n            db.collection('films').findOne({\r\n                isParsed: false\r\n            }, (err, item) => {\r\n                if (err) {\r\n                    return;\r\n                }\r\n\r\n                url = item.url;\r\n\r\n                parser.parse(url, ($) => {\r\n                    let info = {};\r\n                    info.name = $('.moviename-big').text();\r\n                    if (info.name == '') {\r\n                        console.log('has captcha')\r\n                        return;\r\n                    }\r\n                    info.engName = $('span[itemprop=\"alternativeHeadline\"]').text();\r\n                    info.image = $('.film-img-box [itemprop=\"image\"]').attr('src');\r\n                    info.url = url;\r\n                    info.isParsed = true;\r\n                    info.rating = parseFloat($('.rating_ball').text());\r\n\r\n                    db.collection('films').update({url: url}, info, (err, result) => {\r\n                        if (err) {\r\n                            res.send({'error': 'An error has occurred'});\r\n                        } else {\r\n                            res.send(result.ops);\r\n                        }\r\n                    });\r\n                })\r\n\r\n            }, 30000)\r\n        });\r\n    });\r\n\r\n\r\n    app.get('/users/:id', (req, res) => {\r\n        const id = req.params.id;\r\n        const details = {'_id': new ObjectID(id)};\r\n        db.collection('users').findOne(details, (err, item) => {\r\n            if (err) {\r\n                res.send({'error': 'An error has occurred'});\r\n            } else {\r\n                res.send(item);\r\n            }\r\n        });\r\n    });\r\n\r\n\r\n    app.post('/add-user/', (req, res) => {\r\n        const user = {title: req.headers.title, movie: req.headers.description, rating: req.headers.rating};\r\n        db.collection('films').insert(user, (err, result) => {\r\n            if (err) {\r\n                res.send({'error': 'An error has occurred'});\r\n            } else {\r\n                res.send(result.ops[0]);\r\n            }\r\n        });\r\n    });\r\n\r\n    app.get('/users/', (req, res) => {\r\n        db.collection(\"users\").find({}).toArray(function (err, result) {\r\n            if (err) throw err;\r\n            res.send(result);\r\n            console.log(result);\r\n            db.close();\r\n        });\r\n\r\n    });\r\n\r\n};"]}