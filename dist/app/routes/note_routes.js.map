{"version":3,"sources":["../../../app/routes/note_routes.js"],"names":[],"mappings":";;AAAA,IAAI,QAAQ,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC;AAC3C,MAAM,CAAC,OAAO,GAAG,UAAU,GAAG,EAAE,EAAE,EAAE;AAChC,QAAM,YAAY,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AACjD,QAAM,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;AAClC,QAAM,aAAa,GAAG,KAAK,CAAC;;AAG5B,OAAG,CAAC,IAAI,CAAC,YAAY,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AACjC,YAAM,KAAK,GAAG;AACV,iBAAK,EAAE,GAAG,CAAC,OAAO,CAAC,KAAK;AACxB,uBAAW,EAAE,GAAG,CAAC,OAAO,CAAC,WAAW;AACpC,iBAAK,EAAE,GAAG,CAAC,OAAO,CAAC,KAAK;AACxB,kBAAM,EAAE,GAAG,CAAC,OAAO,CAAC,MAAM;AAC1B,gBAAI,EAAE,GAAG,CAAC,OAAO,CAAC,IAAI;SACzB,CAAC;AACF,UAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,UAAC,GAAG,EAAE,MAAM,EAAK;AAClD,gBAAI,GAAG,EAAE;AACL,mBAAG,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,uBAAuB,EAAC,CAAC,CAAC;aAChD,MAAM;AACH,mBAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aAC3B;SACJ,CAAC,CAAC;KACN,CAAC,CAAC;;AAEH,OAAG,CAAC,GAAG,CAAC,YAAY,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AAChC,YAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;AACzB,YAAM,OAAO,GAAG,EAAC,KAAK,EAAE,IAAI,QAAQ,CAAC,EAAE,CAAC,EAAC,CAAC;AAC1C,UAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,UAAC,GAAG,EAAE,IAAI,EAAK;AACnD,gBAAI,GAAG,EAAE;AACL,mBAAG,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,uBAAuB,EAAC,CAAC,CAAC;aAChD,MAAM;AACH,mBAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAClB;SACJ,CAAC,CAAC;KACN,CAAC,CAAC;;AAEH,OAAG,CAAC,GAAG,CAAC,SAAS,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AAC7B,UAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE,MAAM,EAAE;AACzE,gBAAI,GAAG,EAAE,MAAM,GAAG,CAAC;AACnB,eAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjB,mBAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;;SAEvB,CAAC,CAAC;KAEN,CAAC,CAAC;;AAEH,OAAG,CAAC,GAAG,CAAC,YAAY,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AAChC,UAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE,MAAM,EAAE;AAC9D,gBAAI,GAAG,EAAE,MAAM,GAAG,CAAC;AACnB,eAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjB,mBAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;;SAEvB,CAAC,CAAC;KAEN,CAAC,CAAC;;AAEH,OAAG,CAAC,GAAG,CAAC,SAAS,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;;AAE7B,UAAE,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,UAAU,CAAC,EAAE,EAAE,UAAU,GAAG,EAAE,MAAM,EAAE,EAEjE,CAAC,CAAC;AACH,UAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,EAAE,EAAE,UAAU,GAAG,EAAE,MAAM,EAAE,EAE5D,CAAC,CAAC;;AAEH,UAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,EAAE,EAAE,UAAU,GAAG,EAAE,MAAM,EAAE,EAE5D,CAAC,CAAC;;AAEH,UAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,EAAE,EAAE,UAAU,GAAG,EAAE,MAAM,EAAE;AAC5D,cAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,EAAC,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,EAAC,EAAE,UAAU,GAAG,EAAE,MAAM,EAAE;AAClF,uBAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACtB,CAAC,CAAC;SACN,CAAC,CAAC;KACN,CAAC,CAAC;;AAEH,OAAG,CAAC,GAAG,CAAC,SAAS,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AAC7B,UAAE,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE,MAAM,EAAE;AAC9D,gBAAI,GAAG,EAAE,MAAM,GAAG,CAAC;AACnB,eAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjB,mBAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;;SAEvB,CAAC,CAAC;KACN,CAAC,CAAC;;AAEH,OAAG,CAAC,GAAG,CAAC,eAAe,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AAAC,mBAAW,CAAC,YAAM;AACtD,cAAE,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC;AAChC,wBAAQ,EAAE,KAAK;aAClB,EAAE,UAAC,GAAG,EAAE,IAAI,EAAK;AACd,oBAAI,GAAG,EAAE;AACL,2BAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;AACrC,2BAAO;iBACV;;AAED,oBAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;AACnB,kBAAE,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC;AAC/B,uBAAG,EAAE,GAAG;iBACX,EAAE,EAAC,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAC,EAAE,UAAC,GAAG,EAAE,IAAI,EAAK;AAC1C,wBAAI,GAAG,EAAE;AACL,+BAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;qBAC7B;iBACJ,CAAC,CAAC;;AAEH,sBAAM,CAAC,KAAK,CAAC,GAAG,EAAE,UAAC,CAAC,EAAE,GAAG,EAAK;AAC1B,wBAAI,KAAK,GAAG,EAAE,CAAC;AACf,wBAAI,CAAC,CAAC,CAAC,yBAAyB,CAAC,CAAC,MAAM,EAAE;AACtC,+BAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;AACpC,+BAAO;qBACV;;AAED,qBAAC,CAAC,yBAAyB,CAAC,CAAC,GAAG,CAAC,YAAY;AACzC,4BAAM,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC7B,6BAAK,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;;AAE5B,4BAAM,IAAI,GAAG;AACT,kCAAM,EAAE,IAAI,CAAC,MAAM;AACnB,kCAAM,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;AACpC,gCAAI,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC;yBACxB,CAAC;AACF,+BAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;;AAE1B,0BAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAC5B,OAAO,CAAC,UAAC,GAAG,EAAE,IAAI,EAAK;AACpB,gCAAI,GAAG,EAAE;AACL,uCAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;6BAC/B,MAAM;AACH,uCAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACtB,kCAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;6BACvC;yBACJ,CAAC,CAAC;qBACV,CAAC,CAAC;;AAEH,sBAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC;AACxB,2BAAG,EAAE,EAAC,GAAG,EAAE,KAAK,EAAC;qBACpB,CAAC,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,iBAAiB,EAAK;AACnC,4BAAI,CAAC,GAAG,EAAE;AACN,6CAAiB,CAAC,OAAO,CAAC,UAAC,IAAI,EAAK;AAChC,oCAAM,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACpC,oCAAI,GAAG,GAAG,CAAC,CAAC,EAAE;AACV,yCAAK,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;iCACxB;6BACJ,CAAC,CAAC;yBACN;AACD,6BAAK,CAAC,OAAO,CAAC,UAAC,GAAG,EAAK;AACnB,gCAAI,IAAI,GAAG,EAAC,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAC,CAAC;AACvC,8BAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;yBACvC,CAAC,CAAC;qBACN,CAAC,CAAC;;AAEH,sBAAE,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC;AAC/B,2BAAG,EAAE,GAAG;qBACX,EAAE,EAAC,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAC,EAAE,UAAC,GAAG,EAAE,IAAI,EAAK,EAC7C,CAAC,CAAC;iBACN,CAAC,CAAC;aACN,CAAC,CAAC;SACN,EAAE,aAAa,CAAC,CAAA;KAAC,CAAC,CAAC;;AAEpB,QAAI,SAAS,GAAG,SAAZ,SAAS,CAAY,EAAE,EAAE,QAAQ,EAAE;AACnC,YAAM,GAAG,cAAY,EAAE,sCAAmC,CAAC;AAC3D,cAAM,CAAC,KAAK,CAAC,GAAG,EAAE,UAAC,CAAC,EAAE,GAAG,EAAK;AAC1B,gBAAI,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,MAAM,EAAE;AAC3B,uBAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACjB,uBAAO;aACV;;AAED,gBAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;AACjC,wBAAQ,EAAE,CAAC;aACd;;AAED,gBAAM,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5E,gBAAM,OAAO,GAAG,GAAG,CAAC;;kCACX,CAAC;AACN,oBAAM,GAAG,cAAY,EAAE,8CAAyC,CAAC,WAAQ,CAAC;;AAE1E,oBAAM,SAAS,GAAG;AACd,4BAAQ,EAAE,KAAK;AACf,0BAAM,EAAE,EAAE;AACV,uBAAG,EAAE,GAAG;iBACX,CAAC;;AAEF,kBAAE,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AACzD,2BAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACxC,wBAAI,GAAG,KAAK,IAAI,EAAE;AACd,0BAAE,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,SAAS,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AACxD,mCAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAAC;yBACxC,CAAC,CAAC;qBACN;iBACJ,CAAC,CAAC;;;AAhBP,iBAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,QAAQ,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;sBAArC,CAAC;aAiBT;SACJ,CAAC,CAAA;KACL,CAAC;;AAEF,OAAG,CAAC,GAAG,CAAC,iBAAiB,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AACrC,YAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;AACzB,iBAAS,CAAC,EAAE,CAAC,CAAC;KACjB,CAAC,CAAC;;AAEH,OAAG,CAAC,GAAG,CAAC,cAAc,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AAClC,eAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;AAChC,mBAAW,CAAC,YAAY;AACpB,mBAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;AAC3B,gBAAM,SAAS,GAAG;AACd,wBAAQ,EAAE,KAAK;aAClB,CAAC;AACF,cAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,UAAC,GAAG,EAAE,IAAI,EAAK;AACrD,uBAAO,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;AAC9B,oBAAI,GAAG,EAAE;AACL,2BAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;AAC3C,2BAAO;iBACV;;AAED,oBAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;;AAEnB,sBAAM,CAAC,KAAK,CAAC,GAAG,EAAE,UAAC,CAAC,EAAK;AACrB,wBAAI,IAAI,GAAG,EAAE,CAAC;AACd,wBAAI,CAAC,IAAI,GAAG,CAAC,CAAC,gBAAgB,CAAC,CAAC,IAAI,EAAE,CAAC;AACvC,wBAAI,IAAI,CAAC,IAAI,IAAI,EAAE,EAAE;AACjB,+BAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAA;AAC1B,+BAAO;qBACV;AACD,wBAAI,CAAC,OAAO,GAAG,CAAC,CAAC,sCAAsC,CAAC,CAAC,IAAI,EAAE,CAAC;AAChE,wBAAI,CAAC,KAAK,GAAG,CAAC,CAAC,kCAAkC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC/D,wBAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACf,wBAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACrB,wBAAI,CAAC,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;;AAEnD,sBAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,EAAC,GAAG,EAAE,GAAG,EAAC,EAAE,IAAI,EAAE,UAAC,GAAG,EAAE,MAAM,EAAK;AAC7D,4BAAI,GAAG,EAAE;AACL,+BAAG,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,uBAAuB,EAAC,CAAC,CAAC;yBAChD,MAAM;AACH,+BAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;yBACxB;qBACJ,CAAC,CAAC;iBACN,CAAC,CAAA;aACL,CAAC,CAAA;SACL,EAAE,aAAa,CAAC,CAAC;KACrB,CAAC,CAAC;;AAEH,OAAG,CAAC,GAAG,CAAC,mBAAmB,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AAAC,mBAAW,CAAE,YAAM;AAC3D,gBAAM,YAAY,GAAG,UAAU,CAAC;AAChC,gBAAM,OAAO,GAAG,EAAC,IAAI,EAAE,YAAY,EAAC,CAAC;AACrC,cAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,UAAC,GAAG,EAAE,IAAI,EAAK;AACtD,oBAAI,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;;AAExB,yBAAS,CAAC,EAAE,EAAE,YAAM;AAChB,sBAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC;AAC7B,4BAAI,EAAE,YAAY;qBACrB,EAAE,EAAC,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,EAAE,EAAC,EAAE,UAAC,GAAG,EAAE,IAAI,EAAK;AAC/C,4BAAI,GAAG,EAAE;AACL,mCAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;yBACrC;qBACJ,CAAC,CAAC;iBACN,CAAC,CAAC;aACN,CAAC,CAAC;SACN,EAAE,aAAa,CAAC,CAAA;KAAC,CAAC,CAAC;;AAEpB,OAAG,CAAC,GAAG,CAAC,YAAY,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AAChC,YAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;AACzB,YAAM,OAAO,GAAG,EAAC,KAAK,EAAE,IAAI,QAAQ,CAAC,EAAE,CAAC,EAAC,CAAC;AAC1C,UAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,UAAC,GAAG,EAAE,IAAI,EAAK;AACnD,gBAAI,GAAG,EAAE;AACL,mBAAG,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,uBAAuB,EAAC,CAAC,CAAC;aAChD,MAAM;AACH,mBAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAClB;SACJ,CAAC,CAAC;KACN,CAAC,CAAC;;AAGH,OAAG,CAAC,IAAI,CAAC,YAAY,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AACjC,YAAM,IAAI,GAAG,EAAC,KAAK,EAAE,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,CAAC,OAAO,CAAC,WAAW,EAAE,MAAM,EAAE,GAAG,CAAC,OAAO,CAAC,MAAM,EAAC,CAAC;AACpG,UAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,UAAC,GAAG,EAAE,MAAM,EAAK;AACjD,gBAAI,GAAG,EAAE;AACL,mBAAG,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,uBAAuB,EAAC,CAAC,CAAC;aAChD,MAAM;AACH,mBAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aAC3B;SACJ,CAAC,CAAC;KACN,CAAC,CAAC;;AAEH,OAAG,CAAC,GAAG,CAAC,SAAS,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AAC7B,UAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE,MAAM,EAAE;AAC3D,gBAAI,GAAG,EAAE,MAAM,GAAG,CAAC;AACnB,eAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjB,mBAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;;SAEvB,CAAC,CAAC;KAEN,CAAC,CAAC;CAEN,CAAC","file":"note_routes.js","sourcesContent":["var ObjectID = require('mongodb').ObjectID;\r\nmodule.exports = function (app, db) {\r\n    const parserModule = require('../parser/parser');\r\n    const parser = new parserModule();\r\n    const REQUEST_DELAY = 60000;\r\n\r\n\r\n    app.post('/add-film/', (req, res) => {\r\n        const movie = {\r\n            title: req.headers.title,\r\n            description: req.headers.description,\r\n            image: req.headers.image,\r\n            rating: req.headers.rating,\r\n            tags: req.headers.tags\r\n        };\r\n        db.collection('films').insert(movie, (err, result) => {\r\n            if (err) {\r\n                res.send({'error': 'An error has occurred'});\r\n            } else {\r\n                res.send(result.ops[0]);\r\n            }\r\n        });\r\n    });\r\n\r\n    app.get('/films/:id', (req, res) => {\r\n        const id = req.params.id;\r\n        const details = {'_id': new ObjectID(id)};\r\n        db.collection('films').findOne(details, (err, item) => {\r\n            if (err) {\r\n                res.send({'error': 'An error has occurred'});\r\n            } else {\r\n                res.send(item);\r\n            }\r\n        });\r\n    });\r\n\r\n    app.get('/films/', (req, res) => {\r\n        db.collection(\"films\").find({isParsed: true}).toArray(function (err, result) {\r\n            if (err) throw err;\r\n            res.send(result);\r\n            console.log(result);\r\n            // db.close();\r\n        });\r\n\r\n    });\r\n\r\n    app.get('/settings/', (req, res) => {\r\n        db.collection(\"settings\").find({}).toArray(function (err, result) {\r\n            if (err) throw err;\r\n            res.send(result);\r\n            console.log(result);\r\n            // db.cl`ose();\r\n        });\r\n\r\n    });\r\n\r\n    app.get('/clear/', (req, res) => {\r\n\r\n        db.collection(\"votesTasks\").deleteMany({}, function (err, result) {\r\n\r\n        });\r\n        db.collection(\"users\").deleteMany({}, function (err, result) {\r\n\r\n        });\r\n\r\n        db.collection(\"films\").deleteMany({}, function (err, result) {\r\n\r\n        });\r\n\r\n        db.collection(\"settings\").deleteMany({}, function (err, result) {\r\n            db.collection(\"settings\").insert({name: 'nextUser', value: 1}, function (err, result) {\r\n                console.log('end');\r\n            });\r\n        });\r\n    });\r\n\r\n    app.get('/votes/', (req, res) => {\r\n        db.collection(\"votesTasks\").find().toArray(function (err, result) {\r\n            if (err) throw err;\r\n            res.send(result);\r\n            console.log(result);\r\n            // db.close();\r\n        });\r\n    });\r\n\r\n    app.get('/parse-votes/', (req, res) => {setInterval(() => {\r\n        db.collection('votesTasks').findOne({\r\n            isParsed: false\r\n        }, (err, item) => {\r\n            if (err) {\r\n                console.log('cannot find votesTask');\r\n                return;\r\n            }\r\n\r\n            let url = item.url;\r\n            db.collection('votesTasks').update({\r\n                url: url\r\n            }, {url: url, isParsed: true}, (err, item) => {\r\n                if (err) {\r\n                    console.log('update err');\r\n                }\r\n            });\r\n\r\n            parser.parse(url, ($, res) => {\r\n                let hrefs = [];\r\n                if (!$('.profileFilmsList .item').length) {\r\n                    console.log('no profileFilmsList ');\r\n                    return;\r\n                }\r\n\r\n                $('.profileFilmsList .item').map(function () {\r\n                    const $a = $(this).find('a');\r\n                    hrefs.push($a.attr('href'));\r\n\r\n                    const mark = {\r\n                        idUser: item.idUser,\r\n                        rating: $(this).find('.vote').text(),\r\n                        film: $a.attr('href'),\r\n                    };\r\n                    console.log('Mark', mark);\r\n\r\n                    db.collection('users').find(mark)\r\n                        .toArray((err, data) => {\r\n                            if (err) {\r\n                                console.log('insert error');\r\n                            } else {\r\n                                console.log('insert');\r\n                                db.collection('users').insert(mark);\r\n                            }\r\n                        });\r\n                });\r\n\r\n                db.collection('films').find({\r\n                    url: {$in: hrefs}\r\n                }).toArray((err, alreadySavedFilms) => {\r\n                    if (!err) {\r\n                        alreadySavedFilms.forEach((film) => {\r\n                            const pos = hrefs.indexOf(film.url);\r\n                            if (pos > -1) {\r\n                                hrefs.splice(pos, 1);\r\n                            }\r\n                        });\r\n                    }\r\n                    hrefs.forEach((url) => {\r\n                        let info = {url: url, isParsed: false};\r\n                        db.collection('films').insert(info);\r\n                    });\r\n                });\r\n\r\n                db.collection('votesTasks').update({\r\n                    url: url\r\n                }, {url: url, isParsed: true}, (err, item) => {\r\n                });\r\n            });\r\n        });\r\n    }, REQUEST_DELAY)});\r\n\r\n    let parseUser = function(id, callback) {\r\n        const url = `/user/${id}/votes/list/ord/date/page/1/#list`;\r\n        parser.parse(url, ($, res) => {\r\n            if (!$('.pagesFromTo').length) {\r\n                console.log(res);\r\n                return;\r\n            }\r\n\r\n            if (typeof callback !== 'undefined') {\r\n                callback();\r\n            }\r\n\r\n            const totalNum = parseInt($('.pagesFromTo').text().split(' ').slice(-1)[0]);\r\n            const numPage = 200;\r\n            for (let i = 0; i <= totalNum / numPage; i++) {\r\n                const url = `/user/${id}/votes/list/ord/date/perpage/200/page/${i}/#list`;\r\n\r\n                const votesTask = {\r\n                    isParsed: false,\r\n                    idUser: id,\r\n                    url: url,\r\n                };\r\n\r\n                db.collection('votesTasks').findOne(votesTask, (err, res) => {\r\n                    console.log('find votesTask', err, res);\r\n                    if (res === null) {\r\n                        db.collection('votesTasks').insert(votesTask, (err, res) => {\r\n                            console.log('insert votesTask', err);\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        })\r\n    };\r\n\r\n    app.get('/parse-user/:id', (req, res) => {\r\n        const id = req.params.id;\r\n        parseUser(id);\r\n    });\r\n\r\n    app.get('/parse-film/', (req, res) => {\r\n        console.log('parse film start');\r\n        setInterval(function () {\r\n            console.log('get from db');\r\n            const nonParsed = {\r\n                isParsed: false\r\n            };\r\n            db.collection('films').findOne(nonParsed, (err, item) => {\r\n                console.log('get', err, item);\r\n                if (err) {\r\n                    console.log('cannot find not parsed film');\r\n                    return;\r\n                }\r\n\r\n                let url = item.url;\r\n\r\n                parser.parse(url, ($) => {\r\n                    let info = {};\r\n                    info.name = $('.moviename-big').text();\r\n                    if (info.name == '') {\r\n                        console.log('has captcha')\r\n                        return;\r\n                    }\r\n                    info.engName = $('span[itemprop=\"alternativeHeadline\"]').text();\r\n                    info.image = $('.film-img-box [itemprop=\"image\"]').attr('src');\r\n                    info.url = url;\r\n                    info.isParsed = true;\r\n                    info.rating = parseFloat($('.rating_ball').text());\r\n\r\n                    db.collection('films').update({url: url}, info, (err, result) => {\r\n                        if (err) {\r\n                            res.send({'error': 'An error has occurred'});\r\n                        } else {\r\n                            res.send(result.ops);\r\n                        }\r\n                    });\r\n                })\r\n            })\r\n        }, REQUEST_DELAY);\r\n    });\r\n\r\n    app.get('/parse-next-user/', (req, res) => {setInterval( () => {\r\n        const SETTING_NAME = 'nextUser';\r\n        const setting = {name: SETTING_NAME};\r\n        db.collection('settings').findOne(setting, (err, item) => {\r\n            let id = item.value + 1;\r\n\r\n            parseUser(id, () => {\r\n                db.collection('settings').update({\r\n                    name: SETTING_NAME\r\n                }, {name: SETTING_NAME, value: id}, (err, item) => {\r\n                    if (err) {\r\n                        console.log('update err setting');\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }, REQUEST_DELAY)});\r\n\r\n    app.get('/users/:id', (req, res) => {\r\n        const id = req.params.id;\r\n        const details = {'_id': new ObjectID(id)};\r\n        db.collection('users').findOne(details, (err, item) => {\r\n            if (err) {\r\n                res.send({'error': 'An error has occurred'});\r\n            } else {\r\n                res.send(item);\r\n            }\r\n        });\r\n    });\r\n\r\n\r\n    app.post('/add-user/', (req, res) => {\r\n        const user = {title: req.headers.title, movie: req.headers.description, rating: req.headers.rating};\r\n        db.collection('films').insert(user, (err, result) => {\r\n            if (err) {\r\n                res.send({'error': 'An error has occurred'});\r\n            } else {\r\n                res.send(result.ops[0]);\r\n            }\r\n        });\r\n    });\r\n\r\n    app.get('/users/', (req, res) => {\r\n        db.collection(\"users\").find({}).toArray(function (err, result) {\r\n            if (err) throw err;\r\n            res.send(result);\r\n            console.log(result);\r\n            // db.close();\r\n        });\r\n\r\n    });\r\n\r\n};"]}